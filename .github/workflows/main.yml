name: Main
on: ['push']
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: sudo apt-get update
      - run: sudo apt-get install --no-install-recommends sudo apt-utils  -y
      - run: sudo apt-get install --no-install-recommends python software-properties-common  -y
      - run: sudo apt-get install --no-install-recommends git curl xvfb  -y
      - run: sudo apt-get install --no-install-recommends libglib2.0-0 libgtk-3-0 -y
      - run: sudo apt-get install --no-install-recommends psmisc -y
      - run: sudo apt-get install --no-install-recommends locales locales-all -y
      - run: wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
      - run: sudo apt-add-repository "deb https://download.sublimetext.com/ apt/stable/"
      - run: sudo apt install sublime-text
      - run: sudo cp xvfb /etc/init.d/xvfb
      - run: sudo chmod +x /etc/init.d/xvfb
      - run: sudo cp docker.sh /docker.sh
      - run: sudo chmod +x /docker.sh
      # - run: sudo cp entrypoint.sh /entrypoint.sh
      # - run: sudo chmod 666 /entrypoint.sh
      # - run: sudo chmod +x /entrypoint.sh
      - run: echo $HOME
      # RUN adduser --disabled-password --gecos '' docker
      # RUN adduser docker sudo
      # RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
      # USER docker
      # - run: cd /home/docker/project
      - env:
          PACKAGE: MarkdownLink
          SUBLIME_TEXT_VERSION: '3'
          DISPLAY: ':1'
          LANGUAGE: 'en_US.UTF-8'
          LANG: 'en_US.UTF-8'
        run: |
          echo PACKAGE = $PACKAGE
          sudo sh -e /etc/init.d/xvfb start
          /docker.sh bootstrap
          /docker.sh install_package_control
          /docker.sh run_tests --coverage

      # sudo ln -s "$HOME/sublime_text_3/sublime_text" /usr/bin/subl
      # -
      #   name: test
      #   env:
      #     PACKAGE: MarkdownLink
      #   run: docker run --rm -it -e PACKAGE=$PACKAGE -v $PWD:/home/docker/project unittesting
  # publish:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: contains(github.ref, 'master')
  #   steps:
  #     -
  #       uses: docker://node:12
  #     -
  #       name: publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npm run release
