name: test, publish

on:
  - push

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      # - uses: ./.docker
      - run: |
        apt-get update
        apt-get install --no-install-recommends sudo apt-utils  -y
        apt-get install --no-install-recommends python software-properties-common  -y
        apt-get install --no-install-recommends git curl xvfb  -y
        apt-get install --no-install-recommends libglib2.0-0 libgtk-3-0 -y
        apt-get install --no-install-recommends psmisc -y
        apt-get install --no-install-recommends locales locales-all -y

        export LANG=en_US.UTF-8
        export LANGUAGE=en_US.UTF-8
        export SUBLIME_TEXT_VERSION=3

        export DISPLAY=:1
        cp xvfb /etc/init.d/xvfb
        chmod +x /etc/init.d/xvfb

      # COPY docker.sh /docker.sh
      # RUN chmod +x /docker.sh
      # COPY entrypoint.sh /entrypoint.sh
      # RUN chmod 666 /entrypoint.sh
      # RUN chmod +x /entrypoint.sh

      # RUN adduser --disabled-password --gecos '' docker
      # RUN adduser docker sudo
      # RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
      # USER docker
      # WORKDIR /home/docker/project
      # ENTRYPOINT ["/entrypoint.sh"]


      # -
      #   name: test
      #   env:
      #     PACKAGE: MarkdownLink
      #   run: docker run --rm -it -e PACKAGE=$PACKAGE -v $PWD:/home/docker/project unittesting
  # publish:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: contains(github.ref, 'master')
  #   steps:
  #     -
  #       uses: docker://node:12
  #     -
  #       name: publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npm run release
